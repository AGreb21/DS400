---
title: "NHANES Challenge"
format: html
editor: visual
---

### Load Libraries

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(tidyverse)
library(haven)
library(here)
library(ggplot2)
library(janitor)
library(scales)
```

### Read-in Datasets for this Analysis:

-   DR1TOT_J.xpt as 'diet_behavior'
-   2017-2018_Hg-Blood.XPT as 'blood_hg'
-   2017-2018_Hg-Urine.XPT as 'urine_hg'
-   2017-2018_Diabetes.XPT as 'diabetes'

```{r}
diet_behavior <- read_xpt(here("data/nhanes_data/DR1TOT_J.XPT"))
blood_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Blood.XPT"))
urine_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Urine.XPT"))
diabetes <- read_xpt(here("data/nhanes_data/2017-2018_Diabetes.XPT"))
demographics <- read_xpt(here("data/nhanes_data/2017-2018_Demographics.XPT"))
```

### Subset Read-in Datasets

Subset 'diet_behavior' as 'diet'

```{r}
diet <- select(diet_behavior, SEQN, DRD360, DRD370B, DRD370BQ, DRD370Q, DRD370QQ)
```

Subset 'diabetes' as 'tiid'

```{r}
tiid <- select(diabetes, SEQN, DIQ010, DIQ170)
```

Subset 'blood_hg' as 'bhg'

```{r}
bhg <- select(blood_hg, SEQN, LBXIHG, LBDIHGSI, LBXBGE, LBXBGM)
```

Subset "urine_hg' as 'uhg'

```{r}
uhg <- select(urine_hg, SEQN, URXUHG)
```

### Merge Subsets Into A Working Dataframe as 'df'

```{r}
df <- list(diet, tiid, bhg, uhg)

df <- df %>% reduce(full_join, by = 'SEQN')
```

1.  Filter Dataframe df for the following:

```{r}
# Assuming your dataframe is named `nhanes_data`
df <- df %>%
  # Filter out rows where DIQ010 or DRD360 are NA
  filter(!is.na(DIQ010), !is.na(DRD370B)) %>%
  # Keep only rows where DIQ010 and DRD360 are 1 or 2
  filter(DIQ010 %in% c(1, 2), DRD370B %in% c(1, 2)) %>%
  # Recode 1 to "Yes" and 2 to "No" for DIQ010 and DRD360
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    DRD370B = ifelse(DRD370B == 1, "Consumes Ahi", "No Ahi")
  )
  
```

2.  Do some exploratory data analysis

```{r}
# Quick counts
table(df$DIQ010, df$DRD370B)

# Relative proportions
prop.table(table(df$DIQ010, df$DRD370B), margin = 1)

# Summary counts dataframe
summary_df <- df %>%
  group_by(DIQ010, DRD370B) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(DIQ010) %>%
  mutate(percent = n / sum(n) * 100)

print(summary_df)

# Bar plot: proportion of ahi consumption by diabetes status
ggplot(summary_df, aes(x = DIQ010, y = percent, fill = DRD370B)) +
  geom_col(position = "dodge") +
  labs(
    title = "Ahi Consumption by Diabetes Status",
    x = "Diabetes Status",
    y = "Percent",
    fill = "Ahi Consumption"
  ) +
  theme_minimal()

# Mosaic-style plot
ggplot(df, aes(x = DIQ010, fill = DRD370B)) +
  geom_bar(position = "fill") +
  labs(
    title = "Proportion of Ahi Consumption by Diabetes Status",
    x = "Diabetes Status",
    y = "Proportion"
  ) +
  theme_minimal()
```

2.  Determine the prior probability that someone has diabetes (DIQ010)
    -   P(B)

```{r}
df %>% 
  tabyl(DIQ010)

prior_probability_has_diabetes <- 0.13
```

2.  Determine the prior probability that someone eats tuna (DRD370B)
    -   P(A)

```{r}
df %>% 
  tabyl(DRD370B)

prior_probability_consumes_ahi <- 0.36
```

2.  Determine the likelihood of eating tuna and having diabetes
    -   L(B\|A) = P(A\|B)

```{r}
df %>% 
  tabyl(DRD370B, DIQ010) %>%
  adorn_percentages("col")

likelihood_has_diabetes_consumes_ahi <- 0.36
```

2.  Determine posterior probability via bayes theorem
    -   P(B\|A)

```{r}
(likelihood_has_diabetes_consumes_ahi * prior_probability_has_diabetes) / prior_probability_consumes_ahi
```

2.  What other questions can we ask of this data?

#### Bayes Theorem

$$
P(B \mid A) = \frac{P(B) L(B \mid A)}{P(A)} 
$$

B \<- Has Diabetes

A \<- Consumes Ahi

### Challenge

Determine the posterior probability that someone has diabetes given they are over the age of 40. Age is in the demographics dataframe, you will have to join it with the tiid data.

### Combining data frame

```{r}

age <- select(demographics, SEQN, RIDAGEYR)

age_df <- list(age, tiid)

age_df <- age_df %>% reduce(full_join, by = 'SEQN')
```

### Cleaning data

```{r}
age_df <- age_df %>%
  # Filter out rows where DIQ010 or RIDAGEYR are NA
  filter(!is.na(DIQ010), !is.na(RIDAGEYR)) %>%
  # Keep only rows where DIQ010 and DRD360 are 1 or 2
  filter(DIQ010 %in% c(1, 2)) %>%
  # Recode 1 to "Yes" and 2 to "No" for DIQ010 and DRD360
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    RIDAGEYR = ifelse(RIDAGEYR < 40, "Under 40", "Over 40"))
  
```

### Data analysis

```{r}
# Quick counts
table(age_df$DIQ010, age_df$RIDAGEYR)

# Relative proportions
prop.table(table(age_df$DIQ010, age_df$RIDAGEYR), margin = 1)

# Summary counts dataframe
summary_df <- age_df %>%
  group_by(DIQ010, RIDAGEYR) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(DIQ010) %>%
  mutate(percent = n / sum(n) * 100)

print(summary_df)

# Bar plot: proportion of age group by diabetes status
ggplot(summary_df, aes(x = DIQ010, y = percent, fill = RIDAGEYR)) +
  geom_col(position = "dodge") +
  labs(
    title = "Age Group Distribution by Diabetes Status",
    x = "Diabetes Status",
    y = "Percent",
    fill = "Age Group"
  ) +
  theme_minimal()

# Mosaic-style plot
ggplot(age_df, aes(x = DIQ010, fill = RIDAGEYR)) +
  geom_bar(position = "fill") +
  labs(
    title = "Proportion of Age Groups by Diabetes Status",
    x = "Diabetes Status",
    y = "Proportion"
  ) +
  theme_minimal()
```
